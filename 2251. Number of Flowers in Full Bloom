class Solution:
    def binarySearh(self,arr,target):
        l = 0
        r = len(arr)-1
        while l<=r:
            mid = (l+r)//2
            if arr[mid]<target:
                l = mid+1
            else:
                r = mid-1
        return r
    def fullBloomFlowers(self, flowers: List[List[int]], people: List[int]) -> List[int]:
        # sorted(flowers)
        # res = []
        # for i in range(len(people)):
        #     c=0
        #     for j in flowers:
        #         if people[i]>= j[0] and people[i]<=j[1]:
        #             c+=1
        #     res.append(c)
        # return res

        start,end = [],[]
        for i in flowers:
            start.append(i[0])
            end.append(i[1])
        start.sort()
        end.sort() 
        res =[]
        for i in people:
            x = self.binarySearh(start,i+1)
            y = self.binarySearh(end,i)
            res.append(x-y)
        return res
