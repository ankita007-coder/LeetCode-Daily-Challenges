class Solution:
    def knightDialer(self, n: int) -> int:
        
    # Define the valid knight moves
        moves = [
            (4, 6), (6, 8),
            (7, 9), (4, 8),
            (0, 3, 9), (), (0, 1, 7),
            (2, 6), (1, 3),
            (2, 4),
        ]

        MOD = 10**9 + 7

        # Initialize a 2D DP array to store the number of ways
        dp = [[1] * 10 for _ in range(n)]

        for i in range(1,n):
            for j in range(10):
                dp[i][j] = sum(dp[i-1][k] for k in moves[j])%MOD
        
        return sum(dp[n-1])%MOD
        

